server:
  port: 8080   #  配置启动端口号

mybatis:
  #configure-location: classpath:mybatis/mybatis.cfg.xml    #  mybatis主配置文件所在路径
  type-aliases-package: com.oliver.guava.dao   #  定义所有操作类的别名所在包
  mapper-locations: classpath:mybatis/mapper/*.xml  #  所有的mapper映射文件

spring:
  application:
    name: guava-redis-rabbitmq
  redis: #Redis properties
    host: localhost
    port: 6379
    jedis:
      pool:
        max-idle: 8
        min-idle: 0
        max-active: 8
        max-wait: -1
  rabbitmq: #RabbitMq properties
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    publisher-confirms: true #生产者可以判断消息是否发送到了broker
    publisher-returns: true #生产者可以判断消息是否发送到了queue
    listener:
      direct:
        acknowledge-mode: auto
      simple:
        acknowledge-mode: auto
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource  #  配置当前要使用的数据源的操作类型
    driver-class-name: com.mysql.cj.jdbc.Driver    #  配置mysql的驱动程序类
    url: jdbc:mysql://localhost:3306/ecrmdb?serverTimezone=UTC
    username: root                                 #  数据库用户名
    password: 123456                                #  数据库密码
    filters: stat,wall,log4j                      #  配置druid过滤器，开启监控
    dbcp2:                                        #  进行数据库连接池的配置
      min-idle: 5                                 #  数据库连接池的最小维持连接数
      initial-size: 5                             #  初始化提供的连接数
      max-total: 5                                #  最大连接数
      max-wait-millis: 200                        #  等待连接获取的最大超时时间

pagehelper:                     #pagehelper分页插件
  helperDialect: mysql          #设置数据库方言
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

# 连接mq信息
mq:
  queue_name: oliver_queue
  exchange: oliverExchange
  route_key: oliverRoutingKey